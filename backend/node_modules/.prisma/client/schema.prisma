// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String
  tagline      String?
  location     String?
  summary      String?  @db.Text
  profilePhoto String?
  cvUrl        String?
  linkedin     String?
  github       String?
  twitter      String?
  instagram    String?
  codeforces   String?
  leetcode     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("users")
}

model Skill {
  id        String   @id @default(cuid())
  name      String   @unique
  svgIcon   String   @db.Text // Store SVG as string
  category  String   @default("Technical") // Technical, Soft, etc.
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("skills")
}

model Project {
  id          String   @id @default(cuid())
  title       String   @unique
  description String   @db.Text
  imageUrl    String?
  liveUrl     String?
  githubUrl   String?
  techStack   String // Comma-separated tech stack
  order       Int      @default(0)
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("projects")
}

model Certificate {
  id            String   @id @default(cuid())
  title         String   @unique
  issuer        String
  issueDate     DateTime
  credentialId  String?
  credentialUrl String?
  imageUrl      String?
  order         Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("certificates")
}

model Message {
  id        String   @id @default(cuid())
  name      String
  email     String
  subject   String?
  content   String   @db.Text
  read      Boolean  @default(false)
  replied   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("messages")
}
